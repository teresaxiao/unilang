class
❪string❫
❪iostream❫
❪vector❫
❪"code/utilities/chinese/translation_entry"❫
⚯
⚞⚟

◀public: static▶ std::vector<Translation_Entry> ☀Get()❰

    std::vector<Translation_Entry> entries;

// pinyin characters
// ā ē ī ō ū ǖ Ā Ē Ī Ō Ū Ǖ
// á é í ó ú ǘ Á É Í Ó Ú Ǘ
// ǎ ě ǐ ǒ ǔ ǚ Ǎ Ě Ǐ Ǒ Ǔ Ǚ
// à è ì ò ù ǜ À È Ì Ò Ù Ǜ
// a e i o u ü A E I O U Ü test
// 11 new consonant sounds
// 7 new vowel sounds

    {
        Translation_Entry x;
        x.english = L"out";
        x.pinyin = L"chū";
        x.chinese = L"出";
        x.tags.emplace_back("word");
        entries.emplace_back(x);
    }

    {
        Translation_Entry x;
        x.english = L"mouth";
        x.pinyin = L"kǒu";
        x.chinese = L"口";
        x.tags.emplace_back("word");
        entries.emplace_back(x);
    }

    {
        Translation_Entry x;
        x.english = L"exit";
        x.pinyin = L"chūkǒu";
        x.chinese = L"出口";
        x.tags.emplace_back("word");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"entrance";
        x.pinyin = L"rùkǒu";
        x.chinese = L"入口";
        x.tags.emplace_back("word");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"thank you";
        x.pinyin = L"xièxiè";
        x.chinese = L"谢谢";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("compliment");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"you're welcome";
        x.pinyin = L"bù kèqì / bié kèqì / bú yòng xiè";
        x.chinese = L"不客气 / 别客气 / 不用谢";
        x.tags.emplace_back("word");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"hello";
        x.pinyin = L"nǐ hǎo";
        x.chinese = L"你好";
        x.tags.emplace_back("word");
        x.tags.emplace_back("greeting");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"hello (on the phone)";
        x.pinyin = L"wéi";
        x.chinese = L"喂";
        x.tags.emplace_back("word");
        x.tags.emplace_back("greeting");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"good morning";
        x.pinyin = L"zǎo";
        x.chinese = L"早";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("greeting");
        x.tags.emplace_back("temporal");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"good afternoon";
        x.pinyin = L"wǔ ān";
        x.chinese = L"午安";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("greeting");
        x.tags.emplace_back("temporal");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"goodnight";
        x.pinyin = L"wǎn'ān";
        x.chinese = L"晚安";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("greeting");
        x.tags.emplace_back("temporal");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"tomorrow";
        x.pinyin = L"míngtiān";
        x.chinese = L"明天";
        x.tags.emplace_back("word");
        x.tags.emplace_back("temporal");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"delicious";
        x.pinyin = L"hào chī";
        x.chinese = L"好吃";
        x.tags.emplace_back("word");
        x.tags.emplace_back("food");
        x.tags.emplace_back("compliment");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"very delicious";
        x.pinyin = L"hěn hào chī";
        x.chinese = L"很好吃";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("food");
        x.tags.emplace_back("compliment");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"beer";
        x.pinyin = L"píjiǔ";
        x.chinese = L"啤酒";
        x.tags.emplace_back("word");
        x.tags.emplace_back("food");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"I / me / my";
        x.pinyin = L"wǒ";
        x.chinese = L"我";
        x.tags.emplace_back("word");
        x.tags.emplace_back("person");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"you";
        x.pinyin = L"Nǐ";
        x.chinese = L"你";
        x.tags.emplace_back("word");
        x.tags.emplace_back("person");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"we / us / ourselves";
        x.pinyin = L"wǒmen";
        x.chinese = L"我们";
        x.tags.emplace_back("word");
        x.tags.emplace_back("person");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"United States / USA / US";
        x.pinyin = L"měiguó";
        x.chinese = L"美国";
        x.tags.emplace_back("word");
        x.tags.emplace_back("place");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"what? / who? / something";
        x.pinyin = L"shénme";
        x.chinese = L"什么";
        x.tags.emplace_back("word");
        x.tags.emplace_back("question");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"is / are / am";
        x.pinyin = L"shì";
        x.chinese = L"是";
        x.tags.emplace_back("word");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"I am an American";
        x.pinyin = L"wǒ shì měi guó rén";
        x.chinese = L"我是美国人";
        x.tags.emplace_back("phrase");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"I am a teacher";
        x.pinyin = L"wǒ shì yí gè lǎo shī";
        x.chinese = L"我是一个老师";
        x.tags.emplace_back("phrase");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"this is an X";
        x.pinyin = L"zhè shì X";
        x.chinese = L"这是";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("generic");
        x.tags.emplace_back("identifying");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"that is an X";
        x.pinyin = L"nà shì X";
        x.chinese = L"那是";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("generic");
        x.tags.emplace_back("identifying");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"this is a cell phone";
        x.pinyin = L"zhè shì shǒu jī";
        x.chinese = L"这是手机";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("identifying");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"that is a sofa";
        x.pinyin = L"nà shì shā fā";
        x.chinese = L"那是沙发";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("identifying");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"X are a kind of X";
        x.pinyin = L"X shì yī zhǒng X";
        x.chinese = L"是一种";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("generic");
        x.tags.emplace_back("identifying");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"apples are a kind of fruit";
        x.pinyin = L"píng guǒ shì yī zhǒng shuǐ guǒ.";
        x.chinese = L"苹果是一种水果";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("identifying");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"do you like America?";
        x.pinyin = L"Nǐ xǐhuān měiguó ma?";
        x.chinese = L"你喜欢美国吗？";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("question");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"is this is an X?";
        x.pinyin = L"zhè shì bú shì X?";
        x.chinese = L"这是不是 X?";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("generic");
        x.tags.emplace_back("identifying");
        x.tags.emplace_back("question");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"is that is an X?";
        x.pinyin = L"nà shì bú shì X?";
        x.chinese = L"那是不是 X?";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("generic");
        x.tags.emplace_back("identifying");
        x.tags.emplace_back("question");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"<statement> ... aren't you?";
        x.pinyin = L"<statement> ... shì bú shì?";
        x.chinese = L"<statement> ... 是不是？";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("clarifying");
        x.tags.emplace_back("question");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"oh, really? / yeah?";
        x.pinyin = L"shì ma?";
        x.chinese = L"是吗?";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("filler");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"uh-huh / yeah (mild agreement)";
        x.pinyin = L"shì de";
        x.chinese = L"是的";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("filler");
        x.tags.emplace_back("agreement");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"right (strong agreement)";
        x.pinyin = L"shì a";
        x.chinese = L"是啊";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("filler");
        x.tags.emplace_back("agreement");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"of course! / I know! (very strong agreement)";
        x.pinyin = L"jiù shì";
        x.chinese = L"就是";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("filler");
        x.tags.emplace_back("agreement");
        entries.emplace_back(x);
    }

    
    return entries;
❱
